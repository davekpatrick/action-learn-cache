name: Standard workflow
on:
  push:
    branches:    
      - main
  workflow_dispatch:
     inputs:
       addRunId:
         description: 'Add run_id file to cache'
         required: true
         type: boolean
         default: true
#
env:
  TF_IN_AUTOMATION: true
  TERRAFORM_CODE_PATH: ./terraform
  TERRAFORM_VERSION: 1.3.3
  CACHE_DATE_FORMAT: '+%Y%m%d%H%M%S'
#
jobs:
  preparation:
    runs-on: ubuntu-latest
    name: Workflow preparation
    steps:
      ## ---------------------------------------------------
      - name: Base setup
        id: setup
        run: |
          echo "NOW=$(/bin/date -u "${{ env.CACHE_DATE_FORMAT }}")" >> $GITHUB_OUTPUT
      ## ---------------------------------------------------
      - uses: actions/checkout@v3
      ## ---------------------------------------------------
      - name: Terraform cache setup
        id: cache-terraform-cli
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.TERRAFORM_CODE_PATH }}/terraform
          # Note: The cache is immutable and cannot be updated once created
          key: ${{ runner.os }}-terraform-cli-${{ env.TERRAFORM_VERSION }}
      ## ---------------------------------------------------
      - name: Terraform installation
        id: terraform-install
        if: steps.cache-terraform-cli.outputs.cache-hit != 'true'
        run: |
          cd ${{ env.TERRAFORM_CODE_PATH }}
          curl --silent \
            --location \
            --request GET \
            --output terraform.zip \
            --url "https://releases.hashicorp.com/terraform/${{ env.TERRAFORM_VERSION }}/terraform_${{ env.TERRAFORM_VERSION }}_linux_amd64.zip"
          unzip terraform.zip -d ./
      ## ---------------------------------------------------
      - name: Terraform initialization
        id: terraform-init
        run: |
          cd ${{ env.TERRAFORM_CODE_PATH }}
          terraform init
      ## ---------------------------------------------------
      - name: debug
        run: |
          pwd
          find .
          set
          terraform version
      ## ---------------------------------------------------
      - name: Terraform Provider cache setup
        id: cache-terraform-providers
        # src: 
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.TERRAFORM_CODE_PATH }}/.terraform
            ${{ env.TERRAFORM_CODE_PATH }}/.terraform.lock.hcl
          # Note: The cache is immutable and cannot be updated once created.
          key: ${{ runner.os }}-${{ github.ref_name }}-terraform-provider-${{ github.run_id }}
      ## ---------------------------------------------------
      - name: Debug
        run: |
          cd ${{ env.TERRAFORM_CODE_PATH }}
          ls -laR
          set
          sleep 30
  validation:
    runs-on: ubuntu-latest
    needs: preparation
    name: Validation
    steps:
      ## ---------------------------------------------------
      - uses: actions/checkout@v3
      ## ---------------------------------------------------
      - name: Terraform Cache
        id: cache-terraform-cli
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.TERRAFORM_CODE_PATH }}/terraform
          # Note: The cache is immutable and cannot be updated once created
          key: ${{ runner.os }}-terraform-cli-${{ env.TERRAFORM_VERSION }}
      ## ---------------------------------------------------
      - name: Terraform Provider cache
        id: cache-terraform-providers
        # src: 
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.TERRAFORM_CODE_PATH }}/.terraform
          # Note: The cache is immutable and cannot be updated once created.
          key: ${{ runner.os }}-${{ github.ref_name }}-terraform-provider-${{ github.run_id }}
      ## ---------------------------------------------------
      - name: Debug
        run: |
          cd ${{ env.TERRAFORM_CODE_PATH }}
          ls -laR
      ## ---------------------------------------------------
      - name: Syntax check
        run: |
          cd ${{ env.TERRAFORM_CODE_PATH }}
          terraform validate
      ## ---------------------------------------------------
      - name: Format check
        run: |
          cd ${{ env.TERRAFORM_CODE_PATH }}
          terraform fmt
  construction:
    runs-on: ubuntu-latest
    needs: validation
    name: Artifact construction
    steps:
      ## ---------------------------------------------------
      - name: Base setup
        id: setup
        run: |
          echo "NOW=$(/bin/date -u "${{ env.CACHE_DATE_FORMAT }}")" >> $GITHUB_OUTPUT
      ## ---------------------------------------------------
      - uses: actions/checkout@v3
      ## ---------------------------------------------------
      - name: Terraform Cache
        id: cache-terraform-cli
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.TERRAFORM_CODE_PATH }}/terraform
          # Note: The cache is immutable and cannot be updated once created
          key: ${{ runner.os }}-terraform-cli-${{ env.TERRAFORM_VERSION }}
      ## ---------------------------------------------------
      - name: Terraform Provider cache
        id: cache-terraform-providers
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.TERRAFORM_CODE_PATH }}/.terraform
          # Note: The cache is immutable and cannot be updated once created.
          key: ${{ runner.os }}-${{ github.ref_name }}-terraform-provider-${{ github.run_id }}
      ## ---------------------------------------------------
      - name: Terraform Apply
        run: |
          cd ${{ env.TERRAFORM_CODE_PATH }}
          terraform apply --auto-approve
      ## ---------------------------------------------------
      - name: Terraform State cache
        id: cache-terraform-state
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.TERRAFORM_CODE_PATH }}/terraform.tfstate
            ${{ env.TERRAFORM_CODE_PATH }}/terraform.tfstate.backup
          # Note: The cache is immutable and cannot be updated once created.
          key: ${{ runner.os }}-${{ github.ref_name }}-terraform-state-${{ github.run_id }}-${{ steps.setup.outputs.NOW }}
          restore-keys: |
            ${{ runner.os }}-${{ github.ref_name }}-terraform-state-${{ github.run_id }}
  testing:
    runs-on: ubuntu-latest
    needs: construction
    name: Artifact testing
    steps:
      ## ---------------------------------------------------
      - name: Base setup
        id: setup
        run: |
          echo "NOW=$(/bin/date -u "${{ env.CACHE_DATE_FORMAT }}")" >> $GITHUB_OUTPUT
      ## ---------------------------------------------------
      - uses: actions/checkout@v3
      ## ---------------------------------------------------
      - name: Terraform Cache
        id: cache-terraform-cli
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.TERRAFORM_CODE_PATH }}/terraform
          # Note: The cache is immutable and cannot be updated once created
          key: ${{ runner.os }}-terraform-cli-${{ env.TERRAFORM_VERSION }}
      ## ---------------------------------------------------
      - name: Terraform Provider cache
        id: cache-terraform-providers
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.TERRAFORM_CODE_PATH }}/.terraform
          # Note: The cache is immutable and cannot be updated once created.
          key: ${{ runner.os }}-${{ github.ref_name }}-terraform-provider-${{ github.run_id }}  
      # ---------------------------------------------------
      - name: Terraform State cache
        id: cache-terraform-state
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.TERRAFORM_CODE_PATH }}/terraform.tfstate
            ${{ env.TERRAFORM_CODE_PATH }}/terraform.tfstate.backup
          # Note: The cache is immutable and cannot be updated once created.
          key: ${{ runner.os }}-${{ github.ref_name }}-terraform-state-${{ github.run_id }}-${{ steps.setup.outputs.NOW }}
          restore-keys: |
            ${{ runner.os }}-${{ github.ref_name }}-terraform-state-${{ github.run_id }}
      ## ---------------------------------------------------
      - name: Test cache
        run: |
          cd ${{ env.TERRAFORM_CODE_PATH }}
          ls -laR
          terraform output
      ## ---------------------------------------------------
      - name: Run greeting
        id: hello
        uses: davekpatrick/action-learn-helloworld@main
        with:
          greetingType: 'Hello'
      ## ---------------------------------------------------
      # Use the output from the action
      - name: Print greeting
        run: echo "${{ steps.hello.outputs.greetingMessage }}"